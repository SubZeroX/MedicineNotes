{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Tronco braquiocefálico","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Tronco braquiocefálico\"],\n  \"sr-due\": \"2021-10-03T00:00:00.000Z\",\n  \"sr-interval\": 88,\n  \"sr-ease\": 309,\n  \"parent\": [[\"Curva da aorta\"]]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-Aorta\",\n    \"title\": \"Artéria Aorta\"\n  }, \"[[Art\\xE9ria Aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426171059.png\",\n    \"alt\": \"Pasted image 20210426171059.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge da \", \"[[Curva da aorta]][^1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tem esse nome pois se dirige para o enc\\xE9falo e para o tronco\")), mdx(\"h1\", {\n    \"id\": \"2-vasos-que-emergem-dela\"\n  }, \"2 vasos que emergem dela\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-comum-direita\",\n    \"title\": \"Artéria carótida comum direita\"\n  }, \"[[Art\\xE9ria car\\xF3tida comum direita]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]][^2]\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leva sangue arterial do cora\\xE7\\xE3o para o resto do corpo\")), mdx(\"h1\", {\n    \"id\": \"partes\"\n  }, \"Partes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Aorta-ascendente\",\n    \"title\": \"Aorta ascendente\"\n  }, \"[[Aorta ascendente]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"2a232a92-2b6c-5ad9-8ff3-474d53e9a052","fields":{"slug":"/Artéria Aorta","title":"Partes"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Curva da aorta\",\n  \"produção\": [[\"2021-07-19T00:00:00.000Z\"]],\n  \"aliases\": [\"\"],\n  \"tags\": \"p1anato\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Segunda parte da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-Aorta\",\n    \"title\": \"Artéria Aorta\"\n  }, \"[[Art\\xE9ria Aorta]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426170834.png\",\n    \"alt\": \"Pasted image 20210426170834.png\"\n  }))), mdx(\"h1\", {\n    \"id\": \"3-vasos-que-saem-dela\"\n  }, \"3 vasos que saem dela\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426171022.png\",\n    \"alt\": \"Pasted image 20210426171022.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020211031104318.png\",\n    \"alt\": \"Pasted image 20211031104318.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-comum-esquerda\",\n    \"title\": \"Artéria carótida comum esquerda\"\n  }, \"[[Art\\xE9ria car\\xF3tida comum esquerda]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria subcl\\xE1via esquerda]][^1]\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[""]},"parent":{"__typename":"File","id":"b8c31cda-29b2-554f-9b47-5124a11716c1","fields":{"slug":"/Curva da aorta","title":"3 vasos que saem dela"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria carótida comum direita\"],\n  \"anki\": 0,\n  \"tags\": \"p2fisio\",\n  \"grow\": \"seed\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-Aorta\",\n    \"title\": \"Artéria Aorta\"\n  }, \"[[Art\\xE9ria Aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426171508.png\",\n    \"alt\": \"Pasted image 20210426171508.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge do \", \"[[Tronco braquiocef\\xE1lico]][^1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Entram no for\\xE2me carot\\xEDdeo do cr\\xE2nio\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a30c587b-67ae-56e7-b94f-4ad65e0726b0","fields":{"slug":"/Artéria carótida comum direita","title":"Artéria carótida comum direita"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria subclávia esquerda\"],\n  \"tags\": \"p2fisio\",\n  \"grow\": \"seed\",\n  \"anki\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", \"[[Tronco braquiocef\\xE1lico]][^1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210420220532.png\",\n    \"alt\": \"Pasted image 20210420220532.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge diretamente do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ela entra na axila entre a primeira costela (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Costelas\",\n    \"title\": \"Costelas\"\n  }, \"[[Costelas]]\"), \") e a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Clavicula\",\n    \"title\": \"Clavícula\"\n  }, \"[[Clav\\xEDcula]]\"), \", e se torna \", \"[[Art\\xE9ria axilar]][^2]\")), mdx(\"h1\", {\n    \"id\": \"ramos-que-emergem-medialmente-ao-músculo-escaleno-anterior\"\n  }, \"Ramos que emergem medialmente ao \", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Musculo-escaleno-anterior\",\n    \"title\": \"Músculo escaleno anterior\"\n  }, \"[[M\\xFAsculo escaleno anterior]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-vertebral\",\n    \"title\": \"Artéria vertebral\"\n  }, \"[[Art\\xE9ria vertebral]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-toracica-interna\",\n    \"title\": \"Artéria torácica interna\"\n  }, \"[[Art\\xE9ria tor\\xE1cica interna]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-tireocervical\",\n    \"title\": \"Tronco tireocervical\"\n  }, \"[[Tronco tireocervical]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-tireoidea-inferior\",\n    \"title\": \"Artéria tireóidea inferior\"\n  }, \"[[Art\\xE9ria tire\\xF3idea inferior]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-ascendente\",\n    \"title\": \"Artéria cervical ascendente\"\n  }, \"[[Art\\xE9ria cervical ascendente]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-transversa\",\n    \"title\": \"Artéria cervical transversa\"\n  }, \"[[Art\\xE9ria cervical transversa]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-supraescapular\",\n    \"title\": \"Artéria supraescapular\"\n  }, \"[[Art\\xE9ria supraescapular]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria dorsal da esc\\xE1pula]][^3]\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"1f1beb57-5bb9-522e-9510-cfd4743ad664","fields":{"slug":"/Artéria subclávia direita","title":"Ramos que emergem medialmente ao [[Músculo escaleno anterior]]"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria dorsal da escápula\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426173702.png\",\n    \"alt\": \"Pasted image 20210426173702.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Desce medialmente a borda medial da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Escapula\",\n    \"title\": \"Escápula\"\n  }, \"[[Esc\\xE1pula]]\"), \" (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Margens-da-escapula\",\n    \"title\": \"Margens da escápula\"\n  }, \"[[Margens da esc\\xE1pula]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pode ter origem do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-tireocervical\",\n    \"title\": \"Tronco tireocervical\"\n  }, \"[[Tronco tireocervical]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-transversa\",\n    \"title\": \"Artéria cervical transversa\"\n  }, \"[[Art\\xE9ria cervical transversa]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Participa da anastomose da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Escapula\",\n    \"title\": \"Escápula\"\n  }, \"[[Esc\\xE1pula]]\"), \", irrigando sua margem medial (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Margens-da-escapula\",\n    \"title\": \"Margens da escápula\"\n  }, \"[[Margens da esc\\xE1pula]]\"), \")\\n#review \")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2f1e903b-f34a-55cd-88fc-20c49ed8ee12","fields":{"slug":"/Artéria dorsal da escápula","title":"Artéria dorsal da escápula"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Ramo acromial da artéria supraescapular\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-supraescapular\",\n    \"title\": \"Artéria supraescapular\"\n  }, \"[[Art\\xE9ria supraescapular]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210420223907.png\",\n    \"alt\": \"Pasted image 20210420223907.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vasculariza o \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Musculo-Trapezio\",\n    \"title\": \"Músculo Trapézio\"\n  }, \"[[M\\xFAsculo Trap\\xE9zio]]\"), \"\")), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"6e4acb84-a3a6-5782-8a87-0263fc97b772","fields":{"slug":"/Ramo acromial da artéria supraescapular","title":"Ramo acromial da artéria supraescapular"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \"\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210427110624.png\",\n    \"alt\": \"Pasted image 20210427110624.png\"\n  }))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Emerge da terceira por\\xE7\\xE3o da \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \"\"))), mdx(\"h1\", {\n    \"id\": \"da-origem-a-dois-ramos\"\n  }, \"Da origem a dois ramos\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-toracodorsal\",\n    \"title\": \"Artéria toracodorsal\"\n  }, \"[[Art\\xE9ria toracodorsal]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-circunflexa-da-escapula\",\n    \"title\": \"Artéria circunflexa da escápula\"\n  }, \"[[Art\\xE9ria circunflexa da esc\\xE1pula]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f590e7e0-5b65-544c-879d-413289a6d03c","fields":{"slug":"/Artéria subescapular","title":"Da origem a dois ramos"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Curva da aorta\",\n  \"produção\": [[\"2021-07-19T00:00:00.000Z\"]],\n  \"aliases\": [\"\"],\n  \"tags\": \"p1anato\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Segunda parte da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-Aorta\",\n    \"title\": \"Artéria Aorta\"\n  }, \"[[Art\\xE9ria Aorta]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426170834.png\",\n    \"alt\": \"Pasted image 20210426170834.png\"\n  }))), mdx(\"h1\", {\n    \"id\": \"3-vasos-que-saem-dela\"\n  }, \"3 vasos que saem dela\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426171022.png\",\n    \"alt\": \"Pasted image 20210426171022.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020211031104318.png\",\n    \"alt\": \"Pasted image 20211031104318.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-comum-esquerda\",\n    \"title\": \"Artéria carótida comum esquerda\"\n  }, \"[[Art\\xE9ria car\\xF3tida comum esquerda]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria subcl\\xE1via esquerda]][^1]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b8c31cda-29b2-554f-9b47-5124a11716c1","fields":{"slug":"/Curva da aorta","title":"3 vasos que saem dela"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria Lateral do tórax\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210427110432.png\",\n    \"alt\": \"Pasted image 20210427110432.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge da segunda por\\xE7\\xE3o da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \"\")), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"8ce21c6a-7efb-5187-8d3d-f2476aa4de5e","fields":{"slug":"/Artéria Lateral do tórax","title":"Artéria Lateral do tórax"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Tronco tireocervical\"],\n  \"sr-due\": \"2022-01-03T00:00:00.000Z\",\n  \"sr-interval\": 154,\n  \"sr-ease\": 321\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" > \", \"[[Art\\xE9ria subcl\\xE1via direita]][^2]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge medialmente ao \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Musculo-escaleno-anterior\",\n    \"title\": \"Músculo escaleno anterior\"\n  }, \"[[M\\xFAsculo escaleno anterior]]\"), \" da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210420222125.png\",\n    \"alt\": \"Pasted image 20210420222125.png\"\n  }), mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020211031110017.png\",\n    \"alt\": \"Pasted image 20211031110017.png\"\n  })))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dele emergem: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-supraescapular\",\n    \"title\": \"Artéria supraescapular\"\n  }, \"[[Art\\xE9ria supraescapular]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-transversa\",\n    \"title\": \"Artéria cervical transversa\"\n  }, \"[[Art\\xE9ria cervical transversa]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-tireoidea-inferior\",\n    \"title\": \"Artéria tireóidea inferior\"\n  }, \"[[Art\\xE9ria tire\\xF3idea inferior]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-ascendente\",\n    \"title\": \"Artéria cervical ascendente\"\n  }, \"[[Art\\xE9ria cervical ascendente]]\"), \"\")))), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"Emerge de qual art\\xE9ria?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4cb819d6-68dc-5afb-995b-0624bcf0d1bb","fields":{"slug":"/Tronco tireocervical","title":"Tronco tireocervical"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria circunflexa anterior do úmero\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210427111827.png\",\n    \"alt\": \"Pasted image 20210427111827.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge da terceira por\\xE7\\xE3o da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \" e se anastomosa com a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-circunflexa-posterior-do-umero\",\n    \"title\": \"Artéria circunflexa posterior do úmero\"\n  }, \"[[Art\\xE9ria circunflexa posterior do \\xFAmero]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210427112231.png\",\n    \"alt\": \"Pasted image 20210427112231.png\"\n  }))))), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"fe78ae06-2154-537e-8f04-1b97102de394","fields":{"slug":"/Artéria circunflexa anterior do úmero","title":"Artéria circunflexa anterior do úmero"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria subclávia esquerda\"],\n  \"tags\": \"p2fisio\",\n  \"grow\": \"seed\",\n  \"anki\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", \"[[Tronco braquiocef\\xE1lico]][^1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210420220532.png\",\n    \"alt\": \"Pasted image 20210420220532.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge diretamente do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ela entra na axila entre a primeira costela (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Costelas\",\n    \"title\": \"Costelas\"\n  }, \"[[Costelas]]\"), \") e a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Clavicula\",\n    \"title\": \"Clavícula\"\n  }, \"[[Clav\\xEDcula]]\"), \", e se torna \", \"[[Art\\xE9ria axilar]][^2]\")), mdx(\"h1\", {\n    \"id\": \"ramos-que-emergem-medialmente-ao-músculo-escaleno-anterior\"\n  }, \"Ramos que emergem medialmente ao \", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Musculo-escaleno-anterior\",\n    \"title\": \"Músculo escaleno anterior\"\n  }, \"[[M\\xFAsculo escaleno anterior]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-vertebral\",\n    \"title\": \"Artéria vertebral\"\n  }, \"[[Art\\xE9ria vertebral]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-toracica-interna\",\n    \"title\": \"Artéria torácica interna\"\n  }, \"[[Art\\xE9ria tor\\xE1cica interna]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-tireocervical\",\n    \"title\": \"Tronco tireocervical\"\n  }, \"[[Tronco tireocervical]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-tireoidea-inferior\",\n    \"title\": \"Artéria tireóidea inferior\"\n  }, \"[[Art\\xE9ria tire\\xF3idea inferior]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-ascendente\",\n    \"title\": \"Artéria cervical ascendente\"\n  }, \"[[Art\\xE9ria cervical ascendente]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-cervical-transversa\",\n    \"title\": \"Artéria cervical transversa\"\n  }, \"[[Art\\xE9ria cervical transversa]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-supraescapular\",\n    \"title\": \"Artéria supraescapular\"\n  }, \"[[Art\\xE9ria supraescapular]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria dorsal da esc\\xE1pula]][^3]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1f1beb57-5bb9-522e-9510-cfd4743ad664","fields":{"slug":"/Artéria subclávia direita","title":"Ramos que emergem medialmente ao [[Músculo escaleno anterior]]"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria torácica suprema\"],\n  \"alias\": [\"Artéria torácica superior\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426181926.png\",\n    \"alt\": \"Pasted image 20210426181926.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge da primeira por\\xE7\\xE3o da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \"\\n#review \")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"30c64c0d-1711-5f47-8ad9-f6e3f473599c","fields":{"slug":"/Artéria torácica suprema","title":"Artéria torácica suprema"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria supraescapular\"],\n  \"sr-due\": \"2021-12-15T00:00:00.000Z\",\n  \"sr-interval\": 134,\n  \"sr-ease\": 285\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", \"[[Tronco tireocervical]][^1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cursa acima da esc\\xE1pula \\xE0 frente do m\\xFAsculo escaleno anterior e atr\\xE1s da clav\\xEDcula. Ela se anastomosa com as art\\xE9rias escapular circunflexa e toracoacromial (atrav\\xE9s dos ramos acromiais).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-tireocervical\",\n    \"title\": \"Tronco tireocervical\"\n  }, \"[[Tronco tireocervical]]\"), \".\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210420223743.png\",\n    \"alt\": \"Pasted image 20210420223743.png\"\n  })))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Passa na \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/incisura-da-escapula\",\n    \"title\": \"incisura da escápula\"\n  }, \"[[incisura da esc\\xE1pula]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426172746.png\",\n    \"alt\": \"Pasted image 20210426172746.png\"\n  }), mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-2\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-2\",\n    \"className\": \"footnote-ref\"\n  }, \"2\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Ramo-acromial-da-arteria-supraescapular\",\n    \"title\": \"Ramo acromial da artéria supraescapular\"\n  }, \"[[Ramo acromial da art\\xE9ria supraescapular]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Participa da anastomose que ocorre na \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Escapula\",\n    \"title\": \"Escápula\"\n  }, \"[[Esc\\xE1pula]]\"), \", irrigando sua \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/fossa-supra-espinhal\",\n    \"title\": \"fossa supra-espinhal\"\n  }, \"[[fossa supra-espinhal]]\"), \"\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-2\"\n  }, \"A Art\\xE9ria supraescapular passa em qual incisura?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-2\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"e2503f53-e2bc-5933-a9a5-234847f1024f","fields":{"slug":"/Artéria supraescapular","title":"Artéria supraescapular"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria circunflexa posterior do úmero\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210427112029.png\",\n    \"alt\": \"Pasted image 20210427112029.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge da parede posterior da terceira por\\xE7\\xE3o da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \" e se anastomosa com a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-circunflexa-anterior-do-umero\",\n    \"title\": \"Artéria circunflexa anterior do úmero\"\n  }, \"[[Art\\xE9ria circunflexa anterior do \\xFAmero]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210427112231.png\",\n    \"alt\": \"Pasted image 20210427112231.png\"\n  }))))), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"ed81307a-ff52-57b4-b3df-76c46c080733","fields":{"slug":"/Artéria circunflexa posterior do úmero","title":"Artéria circunflexa posterior do úmero"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria carótida comum direita\"],\n  \"anki\": 0,\n  \"tags\": \"p2fisio\",\n  \"grow\": \"seed\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-Aorta\",\n    \"title\": \"Artéria Aorta\"\n  }, \"[[Art\\xE9ria Aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426171508.png\",\n    \"alt\": \"Pasted image 20210426171508.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge do \", \"[[Tronco braquiocef\\xE1lico]][^1]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Entram no for\\xE2me carot\\xEDdeo do cr\\xE2nio\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"a30c587b-67ae-56e7-b94f-4ad65e0726b0","fields":{"slug":"/Artéria carótida comum direita","title":"Artéria carótida comum direita"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Artéria braquial\",\n  \"produção\": [[\"10-06-2021\"]],\n  \"alias\": [\"\"],\n  \"sr-due\": \"2021-10-27T00:00:00.000Z\",\n  \"sr-interval\": 83,\n  \"sr-ease\": 252\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210610201416.png\",\n    \"alt\": \"Pasted image 20210610201416.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direita\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Esquerda\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-esquerda\",\n    \"title\": \"Artéria subclávia esquerda\"\n  }, \"[[Art\\xE9ria subcl\\xE1via esquerda]]\"), \" > \", \"[[Art\\xE9ria axilar]][^1]\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"e281834c-05bf-538b-b5a3-93de0ccb82d0","fields":{"slug":"/Artéria braquial","title":"Artéria braquial"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria toracoacromial\"],\n  \"sr-due\": \"2021-12-19T00:00:00.000Z\",\n  \"sr-interval\": 139,\n  \"sr-ease\": 275\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \" (segunda por\\xE7\\xE3o)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerge da segunda por\\xE7\\xE3o da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-axilar\",\n    \"title\": \"Artéria axilar\"\n  }, \"[[Art\\xE9ria axilar]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210427105552.png\",\n    \"alt\": \"Pasted image 20210427105552.png\"\n  }))), mdx(\"h1\", {\n    \"id\": \"da-origem-a-4-artérias\"\n  }, \"Da origem a 4 art\\xE9rias\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-Acromial\",\n    \"title\": \"Artéria Acromial\"\n  }, \"[[Art\\xE9ria Acromial]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-deltoide\",\n    \"title\": \"Artéria deltóide\"\n  }, \"[[Art\\xE9ria delt\\xF3ide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-clavicular\",\n    \"title\": \"Artéria clavicular\"\n  }, \"[[Art\\xE9ria clavicular]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria peitoral]][^1]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"9a9b2a61-bcc7-5ad0-91cd-0dac8622a7da","fields":{"slug":"/Artéria toracoacromial","title":"Da origem a 4 artérias"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Artéria subclávia\",\n  \"alias\": [\"\"],\n  \"tags\": \"p1anato\",\n  \"grow\": \"\",\n  \"anki\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020211031110117.png\",\n    \"alt\": \"Pasted image 20211031110117.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temos duas: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" que se origina do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" e a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-esquerda\",\n    \"title\": \"Artéria subclávia esquerda\"\n  }, \"[[Art\\xE9ria subcl\\xE1via esquerda]]\"), \" que se origina da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cada Art\\xE9ria subcl\\xE1via emite 4 componentes (de proximal para distal): \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-vertebral\",\n    \"title\": \"Artéria vertebral\"\n  }, \"[[Art\\xE9ria vertebral]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-toracica-interna\",\n    \"title\": \"Artéria torácica interna\"\n  }, \"[[Art\\xE9ria tor\\xE1cica interna]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-tireocervical\",\n    \"title\": \"Tronco tireocervical\"\n  }, \"[[Tronco tireocervical]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-costocervical\",\n    \"title\": \"Tronco costocervical\"\n  }, \"[[Tronco costocervical]]\"), \"\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f035a665-df6a-59b4-a30f-e227458e7f08","fields":{"slug":"/Artéria subclávia","title":"Artéria subclávia"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Artéria axilar\"],\n  \"sr-due\": \"2021-07-31T00:00:00.000Z\",\n  \"sr-interval\": 38,\n  \"sr-ease\": 270,\n  \"parent\": [[\"Artéria subclávia direita\"]]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subclavia-direita\",\n    \"title\": \"Artéria subclávia direita\"\n  }, \"[[Art\\xE9ria subcl\\xE1via direita]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426172354.png\",\n    \"alt\": \"Pasted image 20210426172354.png\"\n  }))), mdx(\"h1\", {\n    \"id\": \"3-porções\"\n  }, \"3 por\\xE7\\xF5es\", mdx(\"sup\", {\n    parentName: \"h1\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\"))), mdx(\"h2\", {\n    \"id\": \"primeira-porção-medial-ao-músculo-peitoral-menor\"\n  }, \"Primeira por\\xE7\\xE3o (medial ao \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Musculo-peitoral-menor\",\n    \"title\": \"Músculo peitoral menor\"\n  }, \"[[M\\xFAsculo peitoral menor]]\"), \")\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210426181724.png\",\n    \"alt\": \"Pasted image 20210426181724.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inicia logo depois do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Musculo-serratil-anterior\",\n    \"title\": \"Músculo serrátil anterior\"\n  }, \"[[M\\xFAsculo serr\\xE1til anterior]]\"), \" e vai at\\xE9 o encontro com o \", \"[[Art\\xE9ria toracoacromial]][^4]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dessa por\\xE7\\xE3o, apenas emerge a \", \"[[Art\\xE9ria tor\\xE1cica suprema]][^2]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pode ser comprimida em dire\\xE7\\xE3o a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Clavicula\",\n    \"title\": \"Clavícula\"\n  }, \"[[Clav\\xEDcula]]\"), \" para estancar hemorragia\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-3\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-3\",\n    \"className\": \"footnote-ref\"\n  }, \"3\")))), mdx(\"h2\", {\n    \"id\": \"segunda-porção-posterior-ao-músculo-peitoral-menor\"\n  }, \"Segunda por\\xE7\\xE3o (posterior ao \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Musculo-peitoral-menor\",\n    \"title\": \"Músculo peitoral menor\"\n  }, \"[[M\\xFAsculo peitoral menor]]\"), \")\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inicia na emerg\\xEAncia do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-toracoacromial\",\n    \"title\": \"Artéria toracoacromial\"\n  }, \"[[Art\\xE9ria toracoacromial]]\"), \" (que faz parte dessa por\\xE7\\xE3o)\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-5\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-5\",\n    \"className\": \"footnote-ref\"\n  }, \"5\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fica posterior ao \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Musculo-peitoral-menor\",\n    \"title\": \"Músculo peitoral menor\"\n  }, \"[[M\\xFAsculo peitoral menor]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\xE1 origem a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-toracoacromial\",\n    \"title\": \"Artéria toracoacromial\"\n  }, \"[[Art\\xE9ria toracoacromial]]\"), \" e a \", \"[[Art\\xE9ria Lateral do t\\xF3rax]][^6]\")), mdx(\"h2\", {\n    \"id\": \"terceira-porção-lateral-ao-músculo-peitoral-menor\"\n  }, \"Terceira por\\xE7\\xE3o (lateral ao \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Musculo-peitoral-menor\",\n    \"title\": \"Músculo peitoral menor\"\n  }, \"[[M\\xFAsculo peitoral menor]]\"), \")\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fica lateral ao \", \"[[M\\xFAsculo peitoral menor]][^7]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emerg\\xEAncias\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-subescapular\",\n    \"title\": \"Artéria subescapular\"\n  }, \"[[Art\\xE9ria subescapular]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-circunflexa-anterior-do-umero\",\n    \"title\": \"Artéria circunflexa anterior do úmero\"\n  }, \"[[Art\\xE9ria circunflexa anterior do \\xFAmero]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Art\\xE9ria circunflexa posterior do \\xFAmero]][^8]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pode ser comprimida contra o \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Umero\",\n    \"title\": \"Úmero\"\n  }, \"[[\\xDAmero]]\"), \" para estancar hemorragia\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-9\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-9\",\n    \"className\": \"footnote-ref\"\n  }, \"9\")))), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"As por\\xE7\\xF5es da Art\\xE9ria axilar s\\xE3o divididas de acordo com qual m\\xFAsculo?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-3\"\n  }, \"Como estancar hemorragia da primeira por\\xE7\\xE3o da Art\\xE9ria axilar?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-3\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-5\"\n  }, \"A segunda por\\xE7\\xE3o da Art\\xE9ria axilar inicia na emerg\\xEAncia de qual vaso?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-5\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-9\"\n  }, \"Como estancar hemorragia da terceira por\\xE7\\xE3o da Art\\xE9ria axilar?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-9\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1df6922c-962c-5761-9ba7-e9f77ac2b5fd","fields":{"slug":"/Artéria axilar","title":"3 porções[^1]"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Artéria carótida comum\",\n  \"alias\": [\"\"],\n  \"tags\": \"p1anato\",\n  \"grow\": \"\",\n  \"anki\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temos duas:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-comum-direita\",\n    \"title\": \"Artéria carótida comum direita\"\n  }, \"[[Art\\xE9ria car\\xF3tida comum direita]]\"), \" se origina da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Curva-da-aorta\",\n    \"title\": \"Curva da aorta\"\n  }, \"[[Curva da aorta]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-comum-esquerda\",\n    \"title\": \"Artéria carótida comum esquerda\"\n  }, \"[[Art\\xE9ria car\\xF3tida comum esquerda]]\"), \" se origina do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tronco-braquiocefalico\",\n    \"title\": \"Tronco braquiocefálico\"\n  }, \"[[Tronco braquiocef\\xE1lico]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Em seu caminho dos grandes vasos at\\xE9 o seio carot\\xEDdeo, a ACC n\\xE3o emite nenhum ramo. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Na altura da 4\\xBA v\\xE9rtebra cervical, o seio carot\\xEDdeo d\\xE1 origem \\xE0 \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-externa\",\n    \"title\": \"Artéria carótida externa\"\n  }, \"[[Art\\xE9ria car\\xF3tida externa]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arteria-carotida-interna\",\n    \"title\": \"Artéria carótida interna\"\n  }, \"[[Art\\xE9ria car\\xF3tida interna]]\"), \"\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4a18ab4b-bae6-52c6-89c3-814ead92f4e6","fields":{"slug":"/Artéria carótida comum","title":"Artéria carótida comum"}}}]},"fields":{"slug":"/Tronco braquiocefálico","title":"2 vasos que emergem dela"}}},"pageContext":{"id":"8b06a204-0632-5326-a352-da12537efcc2"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}